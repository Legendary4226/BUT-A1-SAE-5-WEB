// --------------------- Cube 3D
nav.top-menu {
    position: fixed;
    top: 0;
    right: 2.5vw;

    // Définir les variables
    --cube-length: 70px;
    --half-cube-length: calc(var(--cube-length) / 2);
    --nav-margin-top-bottom: 6rem;

    width: 9rem;
    height: calc(100vh - 2 * var(--nav-margin-top-bottom));
    padding: var(--nav-margin-top-bottom) 0;

    // Définir la perspective pour le cube
    perspective: 800px;
    perspective-origin: center calc(var(--half-cube-length) + var(--nav-margin-top-bottom));
    // La moitier du cube + 5vh est 'l'exacte milieu de la position du cube

}

// Adaptation spéciale sur grand ecran
@media (min-width: 1550px) {
    nav.top-menu {
        // Placement des liens
        & ul {
            position: absolute;
            top: 0;
            z-index: 49;

            height: 100%;
            width: 100%;

            display: flex;
            justify-content: space-around;
            flex-direction: column;
            align-items: center;
        }

        & ul > li {
            height: var(--cube-length);
            width: var(--cube-length);

            display: flex;
            justify-content: center;
            align-items: center;
            
            list-style-type: none;

            // Par défaut
            opacity: 0;
            visibility: hidden;

            & a {
                text-decoration: none;
                color: var(--text-color);
                text-align: center;
                text-shadow: 0 0 15px var(--secondary-color);

                transition: 0.45s cubic-bezier(.83,1.19,.69,.85);
            }

            & button {
                position: relative;

                width: 100%;
                height: 100%;

                background: none;
                border: none;

                cursor: pointer;

                color: var(--text-color);
                font-family: 'Roboto Mono', monospace;
                font-size: 1rem;
                letter-spacing: 3px;

                &::after, &::before {
                    position: absolute;
                    content: '';

                    transition: 0.5s;

                    width: 100%;
                    height: .5rem;

                    background-color: var(--complementary-color);
                    border-radius: .25rem;
                }

                &::before {
                    right: 0;
                    top: 25%;
                    transform: translateY(-50%);
                    transform-origin: left;
                }
                &::after {
                    left: 0;
                    bottom: 25%;
                    transform: translateY(50%);
                    transform-origin: right;
                }
            }

            & button:hover {
                &::before {
                    transform: translateY(-50%) rotate(-45deg) translateX(20.7107%);
                    top: 100%;
                }
                &::after {
                    transform: translateY(50%) rotate(45deg) translateX(-20.7107%);
                    bottom: 0;
                }
                & p {
                    opacity: 0;
                }
            }
        }


        // Partie de l'animation (le cube 3D)
        & div.menu-cube {
            position: relative;
            // Au millieu
            left: calc(50% - var(--half-cube-length));
            z-index: 50;
            height: var(--cube-length);
            width: var(--cube-length);

            //Placer les enfants
            display: flex;
            justify-content: space-around;
            flex-direction: column;
            align-items: center;

            // Activer la 3D sur les éléments
            transform-style: preserve-3d;

            cursor: pointer;

            & div {
                width: var(--cube-length);
                height: var(--cube-length);
                box-shadow: 0 0 3px var(--text-color), 0 0 3px var(--text-color) inset;

                position: absolute;
                top: 0;

                transition: .45s cubic-bezier(.17,.67,.83,.67);

                &.front {
                    position: absolute;
                    transform: translateZ(var(--half-cube-length));
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                &.back {
                    transform: translateZ(calc(-1 * var(--half-cube-length))) rotateY(180deg);
                }
                &.left {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateY(270deg);
                    transform-origin: center left;
                }
                &.right {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateY(90deg);
                    transform-origin: center right;
                }
                &.top {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateX(90deg);
                    transform-origin: center top;
                }
                &.bottom {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateX(-90deg);
                    transform-origin: center bottom;
                }
            }
        }

        // C'est div.menu-cube qui est sélectionné, simplement une autre classe pour la supprimé quand le menu est actif
        & div.hover-animation:hover {
            & div {

                &.front {
                    transform: translateZ(calc( 1.5 * var(--cube-length)));
                    letter-spacing: 3px;
                }
                &.back {
                    transform: translateZ(calc(-1.5 * var(--half-cube-length))) rotateY(180deg) rotateZ(45deg);
                }
                &.left {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) translateX(calc(-1 * var(--half-cube-length))) rotateY(255deg) rotateZ(45deg);
                }
                &.right {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) translateX(var(--half-cube-length)) rotateY(105deg) rotateZ(45deg);
                }
                &.top {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) translateY(calc(-1 * var(--half-cube-length))) rotateX(105deg) rotateZ(45deg);
                }
                &.bottom {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) translateY(var(--half-cube-length)) rotateX(-105deg) rotateZ(45deg);
                }
            }
        }


        // Après le CLIC de l'utilisateur
        & div.menu-on {
            position: absolute;
            top: 0;
            left: 0;
            height: 100vh;
            width: 100%;

            // Mettre au deuxième plan
            z-index: 49;

            box-shadow: 0 0 4px var(--text-color);

            & div {
                &.front {
                    opacity: 0;
                    display: none;
                }
                &.back {
                    animation: replace-back 1.7s forwards;
                }
                &.left {
                    transform-origin: center;
                    animation: replace-left 1.7s forwards;
                }
                &.right {
                    transform-origin: center;
                    animation: replace-right 1.7s forwards;
                }
                &.top {
                    transform-origin: center;
                    animation: replace-top 1.7s forwards;
                }
                &.bottom {
                    transform-origin: center;
                    animation: replace-bottom 1.7s forwards;
                }
            }

            & div:not(.first) {
                transform: translateY(0) rotateZ(0);
                position: static;
            }
        }

        & div.menu-on + ul > li {
            visibility: visible;
            animation: 1.5s spawn-txt forwards;
            animation-delay: 1.75s;

            //Mettre au premier plan
            z-index: 55;

            & a:hover {
                text-shadow: 0 0 15px var(--complementary-color);
                background-color: var(--secondary-color);
                box-shadow: 0 0 4px var(--complementary-color), inset 0 0 3px var(--complementary-color);

                border-radius: 0.3rem;
                padding: .25rem 1rem;

                letter-spacing: 3px;
            }
        }
    }
}


// Adaptation en commun pour tablettes et téléphones
@media (max-width: 1550px) {
    nav.top-menu {
        position: fixed;
        top: 0;
        right: 0;

        width: 9rem;
        height: 9rem;
        padding: 0;
        margin: 0;

        perspective-origin: center;

        // Le cube
        & div.menu-cube {
            position: fixed;
            right: 3rem;
            top: 2rem;
            // Au premier plan
            z-index: 50;
            height: var(--cube-length);
            width: var(--cube-length);
    
            // Activer la 3D sur les éléments
            transform-style: preserve-3d;
    
            // Mettre le cube de profil
            transform: rotateX(10deg) rotateY(-15deg);
            transition: 1s;
    
            cursor: pointer;
    
            & div {
                width: var(--cube-length);
                height: var(--cube-length);
                box-shadow: 0 0 3px var(--text-color), 0 0 3px var(--text-color) inset;
    
                position: absolute;
                top: 0;
    
                transition: .45s cubic-bezier(.17,.67,.83,.67);
    
                &.front {
                    position: absolute;
                    transform: translateZ(var(--half-cube-length));
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                &.back {
                    transform: translateZ(calc(-1 * var(--half-cube-length))) rotateY(180deg);

                    background: var(--secondary-color);
                }
                &.left {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateY(270deg);
                    transform-origin: center left;

                    background: var(--secondary-color);
                }
                &.right {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateY(90deg);
                    transform-origin: center right;
                }
                &.top {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateX(90deg);
                    transform-origin: center top;

                    background: var(--secondary-color);
                }
                &.bottom {
                    transform: translateZ(calc( -1 * var(--half-cube-length))) rotateX(-90deg);
                    transform-origin: center bottom;
                }
            }
        }

        & div.menu-on {
            animation: stand-in-air 12s alternate infinite cubic-bezier(.07,.22,.95,.79);
            animation-delay: 1s;
        }

        @keyframes stand-in-air {
            from {
                transform: rotateX(10deg) rotateY(-15deg) translateY(0);
            }
            25% {
                transform: rotateX(10deg) rotateY(-15deg) translateY(-10px);
            }
            75% {
                transform: rotateX(10deg) rotateY(-15deg) translateY(10px);
            }
            to {
                transform: rotateX(10deg) rotateY(-15deg) translateY(0);
            }
        }


        & ul {
            position: absolute;
            top: 0;
            right: 100vw;

            width: 100vw;
            height: 100vh;

            // Centrer les éléments
            display: flex;
            flex-direction: column;
            justify-content: space-evenly;
            align-items: center;

            background-color: var(--main-color);

            transition: animation 1s, all 0.6s;
            opacity: 0;

            & li {
                list-style-type: none;
                

                & a {
                    text-decoration: none;
                    color: var(--text-color);

                    padding: 0.5em;
                    border-bottom: 3px solid var(--complementary-color);

                    transition: border 100ms, box-shadow 200ms 150ms, border-radius 200ms 100ms, font-size 200ms 100ms;
                    transition-timing-function: cubic-bezier(.83,1.19,.69,.85);
                    
                }

                & a:hover {
                    border-bottom: 0px solid var(--complementary-color);
                    border-radius: 0.5rem;
                    box-shadow: 0 0 3px var(--complementary-color);
                    font-size: 1.2em;
                }

            }

            
        }

        // Quand le cube a été cliqué
        & div.menu-on + ul {
            right: 0;
            opacity: 1;
            animation: menu-spawn 1s;

            // Sélectionner le bouton de fermeture du menu
            & li:last-child {
                display: none;
            }
        }

        @keyframes menu-spawn {
            from {
                right: 100vw;
                transform: translateX(0);
                clip-path: polygon(0 0, 85% 0, 75% 100%, 0% 100%);
            }
            to {
                right: 100vw;
                transform: translateX(100vw);
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
            }
        }
    }
}





// ----------- Pour le texte des liens du Menu principal
@keyframes spawn-txt {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

// --------------- Pour chaque faces du Menu principal
@keyframes replace-back {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc(-1.5 * var(--half-cube-length))) rotateY(180deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-length)) translateY(55vh) rotateY(180deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: translateX(10rem);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1.4);
        opacity: 1;
    }
}

@keyframes replace-left {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-length))) translateX(calc(-1 * var(--half-cube-length))) rotateY(255deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-length)) translateX(0) translateY(55vh) rotateY(0deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: translateX(10rem);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1.4);
        opacity: 1;
    }
}

@keyframes replace-right {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-length))) translateX(var(--half-cube-length)) rotateY(105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-length)) translateX(0) translateY(55vh) rotateY(0deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: translateX(10rem);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1.4);
        opacity: 1;
    }
}

@keyframes replace-top {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-length))) translateY(calc(-1 * var(--half-cube-length))) rotateX(105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-length)) translateX(0) translateY(55vh) rotateX(105deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: translateX(10rem);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1.4);
        opacity: 1;
    }
}

@keyframes replace-bottom {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-length))) translateY(var(--half-cube-length)) rotateX(-105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-length)) translateY(55vh) rotateX(-105deg) rotateZ(45deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: translateX(10rem);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: translateX(0) scale(1.4);
        opacity: 1;
    }
}