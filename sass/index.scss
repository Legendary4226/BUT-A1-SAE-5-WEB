/* -------------------- RESET CSS */
* {
    padding: 0;
    margin: 0;
}



@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100&display=swap');



body {
    background-color: var(--secondary-color);
    overflow-x: hidden;

    font-family: 'Roboto Mono', monospace;
    color: var(--text-color);
}

main {
    max-width: 100vw;
    min-height: 100vh;

    display: flex;
    justify-content: center;

    margin-right: 13vw;
    margin-left: 13vw;

    padding-right: 2.5vw;
    padding-left: 2.5vw;
}


@keyframes show-left-submenu {
    from {
        box-shadow: 0 0 0px var(--text-color);
    }
    10% {
        box-shadow: 0 0 15px var(--text-color);
    }
    20% {
        box-shadow: 0 0 0px var(--text-color);
    }
}
nav.sub-left-menu {
    //Au premier plan
    z-index: 50;

    height: 100vh;
    width: 15rem;

    position: fixed;
    top: 0;
    left: 0;
    transform: translateX(-85%);

    background: var(--text-color);
    opacity: 0.2;

    transition: 0.5s cubic-bezier(.16,.77,.9,.88);
    transition-property: transform border-radius opacity;

    border-radius: 0 90% 90% 0;

    display: flex;
    flex-direction: column;
    align-items: center;

    & h1, ul {
        opacity: 0;
        transition: opacity 0.25s;
        // Effet d'apparition soudaine du texte
        transition-delay: 0.25s;
    }

    & h1 {
        margin: 2rem 0 2rem 0;
        color: var(--main-color);
    }

    & ul {
        width: 100%;
        height: 80%;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-evenly;

        & li {
            display: flex;
            justify-content: center;
            text-align: center;
            // Espacer les lignes
            line-height: 1.3;

            // Placer les pseudo éléments en fonction de leur parent
            position: relative;

            & a {
                text-decoration: none;
                color: var(--secondary-color);

                padding-top: 1rem;
                transition: 0.5s;
            }
            & a:hover {
                text-shadow: 0 0 2px var(--secondary-color);
            }

            // Barre verte en dessous
            & a::after {
                content: '';
                display: block;

                position: absolute;
                top: 100%;

                padding-top: 10px;

                width: 100%;
                border-bottom: 3px solid var(--complementary-color);

                transform: scaleX(0);

                animation: bouncy-bar-return 0.6s cubic-bezier(.83,1.19,.69,.85);
            }
            & a:hover::after {
                animation: bouncy-bar 0.6s forwards cubic-bezier(.83,1.19,.69,.85);
            }
        }
    }

    @keyframes bouncy-bar {
        from {
            transform: scaleX(0);
        }
        50% {
            transform: scaleX(1);
        }
        75% {
            transform: scaleX(0.8);
        }
        to {
            transform: scaleX(1);
        }
    }
    @keyframes bouncy-bar-return {
        from {
            transform: scaleX(1);
        }
        50% {
            transform: scaleX(0);
        }
        75% {
            transform: scaleX(0.2);
        }
        to {
            transform: scaleX(0);
        }
    }

    &:hover {
        transform: translateX(0);
        border-radius: 0 1% 1% 0;
        opacity: 0.6;

        & h1, ul {
            opacity: 1;
        }
    }
}

section.content {
    // Deuxième plan
    z-index: 25;
}


nav.top-menu {
    // Etre sûr que le menu sera devant le reste
    z-index: 50;
}


// --------------------- Cube 3D
nav.top-menu {
    position: fixed;
    top: 0;
    right: 3.25rem;

    width: 9rem;
    height: calc(100vh - 2 * var(--nav-margin-top-bottom));
    padding: var(--nav-margin-top-bottom) 0;

    // Définir la perspective pour le cube
    perspective: 800px;
    perspective-origin: center calc(var(--half-cube-lenght) + var(--nav-margin-top-bottom));
    // La moitier du cube + 5vh est 'l'exacte milieu de la position du cube

    // Définir les variables
    --cube-lenght: 70px;
    --half-cube-lenght: calc(var(--cube-lenght) / 2);
    --nav-margin-top-bottom: 8vh;

    // Placement des liens
    & ul {
        position: absolute;
        top: 0;
        z-index: 49;

        height: 100%;
        width: 100%;

        display: flex;
        justify-content: space-around;
        flex-direction: column;
        align-items: center;
    }

    // Partie des liens
    & ul > li {
        height: var(--cube-lenght);
        width: var(--cube-lenght);

        display: flex;
        justify-content: center;
        align-items: center;
        
        list-style-type: none;

        // Par défaut
        opacity: 0;
        visibility: hidden;
        transition: 1.5s;
        transition-delay: 1.75s;

        & a {
            text-decoration: none;
            color: var(--text-color);
            text-align: center;
            background-color: var(--secondary-color);
            padding: 0.5rem;
        }
    }


    // Partie de l'animation (le cube 3D)
    & div.menu-cube {
        position: relative;
        // Au millieu
        left: calc(50% - var(--half-cube-lenght));
        z-index: 50;
        height: var(--cube-lenght);
        width: var(--cube-lenght);

        //Placer les enfants
        display: flex;
        justify-content: space-around;
        flex-direction: column;
        align-items: center;

        // Activer la 3D sur les éléments
        transform-style: preserve-3d;

        transition: 1s;

        cursor: pointer;

        & div {
            width: var(--cube-lenght);
            height: var(--cube-lenght);
            box-shadow: 0 0 3px var(--text-color), 0 0 3px var(--text-color) inset;

            position: absolute;
            top: 0;
            
            --delay-faces: 100ms;

            transition: .45s cubic-bezier(.17,.67,.83,.67);

            &.front {
                position: absolute;
                transform: translateZ(var(--half-cube-lenght));
                display: flex;
                align-items: center;
                justify-content: center;
            }
            &.back {
                transform: translateZ(calc(-1 * var(--half-cube-lenght))) rotateY(180deg);
            }
            &.left {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) rotateY(270deg);
                transform-origin: center left;
            }
            &.right {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) rotateY(90deg);
                transform-origin: center right;
            }
            &.top {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) rotateX(90deg);
                transform-origin: center top;
            }
            &.bottom {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) rotateX(-90deg);
                transform-origin: center bottom;
            }
        }
    }

    // C'est div.menu-cube qui est sélectionné, simplement une autre classe pour la supprimé quand le menu est actif
    & div.hover-animation:hover {
        & div {

            &.front {
                transform: translateZ(calc( 1.5 * var(--cube-lenght)));
                letter-spacing: 3px;
            }
            &.back {
                transform: translateZ(calc(-1.5 * var(--half-cube-lenght))) rotateY(180deg) rotateZ(45deg);
            }
            &.left {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateX(calc(-1 * var(--half-cube-lenght))) rotateY(255deg) rotateZ(45deg);
            }
            &.right {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateX(var(--half-cube-lenght)) rotateY(105deg) rotateZ(45deg);
            }
            &.top {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateY(calc(-1 * var(--half-cube-lenght))) rotateX(105deg) rotateZ(45deg);
            }
            &.bottom {
                transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateY(var(--half-cube-lenght)) rotateX(-105deg) rotateZ(45deg);
            }
        }
    }


    // Après le CLIC de l'utilisateur
    & div.menu-on {
        position: absolute;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100%;

        // Mettre au deuxième plan
        z-index: 49;

        & div {
            &.front {
                opacity: 0;
                display: none;
            }
            &.back {
                animation: replace-back 2s forwards;
            }
            &.left {
                transform-origin: center;
                animation: replace-left 2s forwards;
                animation-delay: calc(var(--delay-faces) * 3);
            }
            &.right {
                transform-origin: center;
                animation: replace-right 2s forwards;
                animation-delay: calc(var(--delay-faces) * 2);
            }
            &.top {
                transform-origin: center;
                animation: replace-top 2s forwards;
                animation-delay: calc(var(--delay-faces) * 4);
            }
            &.bottom {
                transform-origin: center;
                animation: replace-bottom 2s forwards;
                animation-delay: calc(var(--delay-faces) * 1);
            }
        }

        & div:not(.first) {
            transform: translateY(0) rotateZ(0);
            position: static;
        }
    }

    & div.menu-on + ul > li {
        opacity: 1;
        visibility: visible;

        //Mettre au premier plan
        z-index: 55;

        & a {
            background: linear-gradient(transparent, var(--secondary-color), transparent);

            border-radius: 2rem;
            box-shadow: 0 0 3px var(--secondary-color);
        }
    }
}


@keyframes replace-back {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc(-1.5 * var(--half-cube-lenght))) rotateY(180deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-lenght)) translateY(55vh) rotateY(180deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: scale(0) rotateZ(-20deg);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: scale(1.3) rotateZ(0);
        opacity: 1;
    }
}

@keyframes replace-left {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateX(calc(-1 * var(--half-cube-lenght))) rotateY(255deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-lenght)) translateX(0) translateY(55vh) rotateY(0deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: scale(0) rotateZ(20deg);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: scale(1.3) rotateZ(0);
        opacity: 1;
    }
}

@keyframes replace-right {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateX(var(--half-cube-lenght)) rotateY(105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-lenght)) translateX(0) translateY(55vh) rotateY(0deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: scale(0) rotateZ(-20deg);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: scale(1.3) rotateZ(0);
        opacity: 1;
    }
}

@keyframes replace-top {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateY(calc(-1 * var(--half-cube-lenght))) rotateX(105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-lenght)) translateY(55vh) rotateX(105deg) rotateZ(180deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: scale(0) rotateZ(-20deg);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: scale(1.3) rotateZ(0);
        opacity: 1;
    }
}

@keyframes replace-bottom {
    from {
        position: absolute;
        opacity: 1;
        transform: translateZ(calc( -1 * var(--half-cube-lenght))) translateY(var(--half-cube-lenght)) rotateX(-105deg) rotateZ(45deg);
    }
    55% {
        transform: translateZ(var(--half-cube-lenght)) translateY(55vh) rotateX(-105deg) rotateZ(45deg);
        opacity: 0;
        position: absolute;
    }
    56% {
        position: static;
        transform: scale(0) rotateZ(-20deg);
    }
    58% {
        opacity: 0;
    }
    to {
        transform: scale(1.3) rotateZ(0);
        opacity: 1;
    }
}